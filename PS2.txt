cbuffer LightBuffer : register(b1) {
    float4 ambientColor;
    float4 diffuseColor;
    float3 lightDirection;
    float  padding;
};

Texture2D<float4> gPosition : register(t0); 
Texture2D<float4> gNormal : register(t1);
Texture2D<float4> gAlbedo : register(t2);
SamplerState samplerLinear : register(s0);

float4 PS_Light(float2 TexCoords : TEXCOORD) : SV_Target {
    float3 worldPos = gPosition.Sample(samplerLinear, TexCoords).xyz;
    float3 normal = normalize(gNormal.Sample(samplerLinear, TexCoords).xyz);
    float4 albedo = gAlbedo.Sample(samplerLinear, TexCoords);

    
    float NdotL = saturate(dot(normal, -lightDirection));
    float4 lighting = ambientColor + diffuseColor * NdotL;

   
    float4 finalColor = lighting * albedo;
    finalColor.a = 1.0f;

    return finalColor;
}
