Texture2D tex : register(t0);
SamplerState samplerLinear : register(s0);

cbuffer LightBuffer : register(b1)
{
    float4 ambientColor;
    float4 diffuseColor;
    float3 lightDirection;
    float  padding; 
};

struct PS_INPUT
{
    float4 Pos : SV_POSITION;
    float3 Normal : NORMAL;
    float3 Tangent : TANGENT;  
    float2 TexCoords : TEXCOORD;
};

float4 PS(PS_INPUT input) : SV_Target0
{
   
    float4 baseColor = tex.Sample(samplerLinear, input.TexCoords);

   
    if (baseColor.a < 0.5)
    {
        discard;
    }


    float3 norm = normalize(input.Normal);

 
    float NdotL = saturate(dot(norm, -lightDirection));
    
 
    float4 lighting = ambientColor + diffuseColor * NdotL;

  
    float4 finalColor = lighting * baseColor;
    finalColor.a = 1.0f; // 保持最终输出的alpha为1.0

    return finalColor;
}
